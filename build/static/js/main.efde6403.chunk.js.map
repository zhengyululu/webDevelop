{"version":3,"sources":["Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","index.js"],"names":["Todoinput","handleInput","e","keyCode","props","add","target","value","bind","setState","todo","todo1","className","htmlFor","id","name","onKeyDown","this","type","placeholder","Component","Todoing","delItem","idx","console","log","del","delItem1","del1","finItem","fin","concelItem","con","state","length","map","item","key","onChange","checked","onClick","style","width","height","defaultProps","Todolist","addItem","data","localStorage","setItem","JSON","stringify","splice","push","todoR","parse","getItem","todoR1","ReactDOM","render","document","getElementById"],"mappings":"gOAEqBA,G,iBACjB,aAAc,IAAD,8BACT,+CAOJC,YAAc,SAACC,GAEM,KAAdA,EAAEC,UACD,EAAKC,MAAMC,IAAIH,EAAEI,OAAOC,OACxBL,EAAEI,OAAOC,MAAM,KAVnB,EAAKN,YAAc,EAAKA,YAAYO,KAAjB,gBACnB,EAAKC,SAAS,CACVC,KAAK,GACLC,MAAM,IALD,E,sEAgBT,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,WACX,2BAAOC,QAAQ,OAAf,aACA,2BAAOC,GAAG,MAAMC,KAAK,IAAIC,UAAWC,KAAKhB,YACzCiB,KAAK,OAAOC,YAAa,6B,GAtBNC,cCClBC,E,YACjB,aAAc,IAAD,8BACT,+CAOJC,QAAS,SAACC,EAAIrB,GACVsB,QAAQC,IAAIF,GACZ,EAAKnB,MAAMsB,IAAIH,IAVN,EAabI,SAAU,SAACJ,EAAIrB,GACXsB,QAAQC,IAAIF,GACZ,EAAKnB,MAAMwB,KAAKL,IAfP,EAkBbM,QAAU,SAACN,GACP,EAAKnB,MAAM0B,IAAIP,IAnBN,EAsBbQ,WAAa,SAACR,GACV,EAAKnB,MAAM4B,IAAIT,IArBf,EAAKU,MAAM,CACPvB,KAAK,GACLC,MAAM,IAJD,E,sEAyBH,IAAD,OACAD,EAAQO,KAAKb,MAAbM,KACLc,QAAQC,IAAIR,KAAKb,OAFZ,IAGAO,EAAOM,KAAKb,MAAZO,MACL,OACI,yBAAKC,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,SACX,wDAAUF,EAAKwB,QAEXxB,EAAKyB,KAAI,SAACC,EAAKb,GACX,OACA,wBAAIc,IAAKd,GACL,6BACI,2BAAOL,KAAK,WAAUoB,SAAU,EAAKT,QAAQrB,KAAK,EAAKe,GAAMgB,QAAS,IAErEH,EACD,4BAAQI,QAAS,EAAKlB,QAAQd,KAAK,EAAKe,IAAxC,aAOpB,yBAAKX,UAAU,UACf,kDAASD,EAAMuB,QAEPvB,EAAMwB,KAAI,SAACC,EAAKb,GACZ,OACA,wBAAIc,IAAKd,GACL,6BACI,2BAAOL,KAAK,WAAUoB,SAAU,EAAKP,WAAWvB,KAAK,EAAKe,GAAMgB,QAAS,EAAGE,MAAO,CAACC,MAAM,OAAOC,OAAO,UAD5G,MAEgBP,EACZ,4BAAQI,QAAS,EAAKb,SAASnB,KAAK,EAAKe,IAAzC,mB,GA3DHH,aA2ErCC,EAAQuB,aAAe,G,ICzEFC,E,YACjB,aAAc,IAAD,8BACT,+CAQJC,QAAU,SAACC,GACP,EAAKtC,SAAS,CACVC,KAAK,GAAD,mBAAM,EAAKuB,MAAMvB,MAAjB,CAAsBqC,MAC5B,WACEC,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKlB,MAAMvB,UAG1Dc,QAAQC,IAAI,EAAKQ,MAAMvB,OAhBd,EAmBbY,QAAU,SAACC,GAGP,EAAKd,UAAS,SAACwB,EAAM7B,GACjB,IAAIM,EAAI,YAAOuB,EAAMvB,MAErB,OADAA,EAAK0C,OAAO7B,EAAI,GACT,CACHb,KAAKA,MAEX,WACEsC,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKlB,MAAMvB,WA7BjD,EAiCbiB,SAAW,SAACJ,GAGR,EAAKd,UAAS,SAACwB,EAAM7B,GACjB,IAAIO,EAAM,YAAIsB,EAAMtB,OAEpB,OADAA,EAAMyC,OAAO7B,EAAI,GACV,CACHZ,MAAMA,MAEZ,WACEqC,aAAaC,QAAQ,QAAQC,KAAKC,UAAU,EAAKlB,MAAMtB,WAG3Da,QAAQC,IAAI,EAAKQ,MAAMtB,QA9Cd,EAiDbkB,QAAS,SAACN,GACN,EAAKd,UAAS,WACN,EAAKwB,MAAMtB,MAAM0C,KAAK,EAAKpB,MAAMvB,KAAKa,IACtC,EAAKD,QAAQC,MACnB,WACEyB,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKlB,MAAMvB,OACtDsC,aAAaC,QAAQ,QAAQC,KAAKC,UAAU,EAAKlB,MAAMtB,YAvDlD,EA4DboB,WAAY,SAACR,GACT,EAAKd,UAAS,WACN,EAAKwB,MAAMvB,KAAK2C,KAAK,EAAKpB,MAAMtB,MAAMY,IACtC,EAAKI,SAASJ,MACpB,WACEyB,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKlB,MAAMvB,OACtDsC,aAAaC,QAAQ,QAAQC,KAAKC,UAAU,EAAKlB,MAAMtB,YAhE3D,EAAKsB,MAAQ,CACTvB,KAAK,GACLC,MAAM,IAEVa,QAAQC,IAAI,EAAKQ,MAAMvB,MANd,E,iFAwET,IAAI4C,EAAQJ,KAAKK,MAAMP,aAAaQ,QAAQ,SACxCC,EAAOP,KAAKK,MAAMP,aAAaQ,QAAQ,UACxCF,GAASG,GACRxC,KAAKR,UAAS,WACV,MAAM,CACFC,KAAK4C,EACL3C,MAAM8C,Q,+BAMlB,OACI,6BACI,kBAAC,EAAD,CAAWpD,IAAKY,KAAK6B,UACrB,kBAAC,EAAD,CAASpB,IAAKT,KAAKK,QAASM,KAAMX,KAAKU,SACtCjB,KAAMO,KAAKgB,MAAMvB,KAAMC,MAAOM,KAAKgB,MAAMtB,MACzCmB,IAAKb,KAAKY,QAASG,IAAKf,KAAKc,kB,GA1FRX,aCDtCsC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.efde6403.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './todo.css'\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.setState={\r\n            todo:[],\r\n            todo1:[]\r\n        }\r\n    }\r\n    handleInput = (e)=>{\r\n        // 绑定this，事件处理函数写成箭头函数，或者用bind\r\n        if(e.keyCode === 13){\r\n            this.props.add(e.target.value);\r\n            e.target.value='';\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='top'>\r\n                <div className='tcenter'>\r\n                    <label htmlFor=\"inp\">ToDoList </label>\r\n                    <input id=\"inp\" name=\"a\" onKeyDown={this.handleInput} \r\n                    type=\"text\" placeholder={'  添加Todo'}/>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n// 受控组件：\r\n// 1、给input标签添加value属性，赋值为state的值\r\n// 2、给input标签绑定onChange事件，\r\n// 在事件处理函数中setState\r\n// 3、一个事件处理函数控制多个表单元素时，\r\n// 给input标签加上name属性,事件处理函数中写：\r\n// setState({[e.target.name]:e.target.value})","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport './todo.css'\r\nexport default class Todoing extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            todo:[],\r\n            todo1:[]\r\n        }\r\n    }\r\n// 删除正在进行\r\n    delItem =(idx,e)=>{\r\n        console.log(idx);\r\n        this.props.del(idx);\r\n    }\r\n// 删除已完成\r\n    delItem1 =(idx,e)=>{\r\n        console.log(idx);\r\n        this.props.del1(idx);\r\n    }\r\n// 上到下\r\n    finItem = (idx)=>{\r\n        this.props.fin(idx);\r\n    }\r\n// 下到上\r\n    concelItem = (idx)=>{\r\n        this.props.con(idx);\r\n    }\r\n    render() {\r\n        var {todo} = this.props;\r\n        console.log(this.props)\r\n        var {todo1}=this.props;\r\n        return (\r\n            <div className=\"all\">\r\n                <div className=\"center\">\r\n                    <div className=\"doing\">\r\n                        <p>正在进行  {todo.length}</p>\r\n                        {\r\n                            todo.map((item,idx) =>{\r\n                                return( \r\n                                <li key={idx}>\r\n                                    <div>\r\n                                        <input type='checkbox'onChange={this.finItem.bind(this,idx)} checked={0}>\r\n                                        </input> \r\n                                        {item}\r\n                                        <button onClick={this.delItem.bind(this,idx)}>Del</button>\r\n                                    </div>\r\n                                </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"finish\">\r\n                    <p>已完成  {todo1.length}</p>\r\n                        {\r\n                            todo1.map((item,idx) =>{\r\n                                return( \r\n                                <li key={idx}>\r\n                                    <div>\r\n                                        <input type='checkbox'onChange={this.concelItem.bind(this,idx)} checked={1} style={{width:'22px',height:'22px'}}>\r\n                                        </input>   {item}\r\n                                        <button onClick={this.delItem1.bind(this,idx)}>Del</button>\r\n                                    </div>\r\n                                </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nTodoing.propTypes = {\r\n    todo: PropTypes.array,\r\n    del: PropTypes.func\r\n}\r\nTodoing.defaultProps = {\r\n}","import React, { Component } from 'react';\r\nimport Todoinput from './Todoinput';\r\nimport Todoing from './Todoing';\r\nimport './todo.css';\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            todo:[],\r\n            todo1:[]\r\n        }\r\n        console.log(this.state.todo);\r\n    }\r\n// 添加todolist\r\n    addItem = (data)=>{\r\n        this.setState({\r\n            todo: [...this.state.todo,data]\r\n        },()=>{\r\n            localStorage.setItem(\"todo\",JSON.stringify(this.state.todo));\r\n        }\r\n        )\r\n        console.log(this.state.todo)\r\n    }\r\n// 删除正在进行的\r\n    delItem = (idx)=>{\r\n        // 1、不能直接改变或处理state，通过setState改变\r\n        // 2、setState是异步执行\r\n        this.setState((state,props)=>{\r\n            let todo = [...state.todo];\r\n            todo.splice(idx,1);\r\n            return {\r\n                todo:todo\r\n            }\r\n        },()=>{\r\n            localStorage.setItem(\"todo\",JSON.stringify(this.state.todo));\r\n        })\r\n    }\r\n// 删除已完成的\r\n    delItem1 = (idx)=>{\r\n        // 1、不能直接改变或处理state，通过setState改变\r\n        // 2、setState是异步执行\r\n        this.setState((state,props)=>{\r\n            let todo1=[...state.todo1];\r\n            todo1.splice(idx,1);\r\n            return {\r\n                todo1:todo1\r\n            }\r\n        },()=>{\r\n            localStorage.setItem(\"todo1\",JSON.stringify(this.state.todo1));\r\n        }\r\n        )\r\n        console.log(this.state.todo1)\r\n    }\r\n// 点击checkbox完成任务\r\n    finItem =(idx)=>{\r\n        this.setState(()=>{\r\n                this.state.todo1.push(this.state.todo[idx]);\r\n                this.delItem(idx);\r\n        },()=>{\r\n            localStorage.setItem(\"todo\",JSON.stringify(this.state.todo));\r\n            localStorage.setItem(\"todo1\",JSON.stringify(this.state.todo1));\r\n        }\r\n        )\r\n    }\r\n// 点击checkbox到正在进行\r\n    concelItem =(idx)=>{\r\n        this.setState(()=>{\r\n                this.state.todo.push(this.state.todo1[idx]);\r\n                this.delItem1(idx);\r\n        },()=>{\r\n            localStorage.setItem(\"todo\",JSON.stringify(this.state.todo));\r\n            localStorage.setItem(\"todo1\",JSON.stringify(this.state.todo1));\r\n        }\r\n        )\r\n    }\r\n// localStorage存储\r\n    componentDidMount(){\r\n        let todoR = JSON.parse(localStorage.getItem(\"todo\"));\r\n        let todoR1=JSON.parse(localStorage.getItem(\"todo1\"));\r\n        if(todoR && todoR1){\r\n            this.setState(()=>{\r\n                return{\r\n                    todo:todoR,\r\n                    todo1:todoR1\r\n                }\r\n            })\r\n        }  \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput add={this.addItem}/>\r\n                <Todoing del={this.delItem} del1={this.delItem1}\r\n                 todo={this.state.todo} todo1={this.state.todo1}\r\n                 fin={this.finItem} con={this.concelItem}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todolist from './Todolist/Todolist';\n\nReactDOM.render(\n    <Todolist/>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}